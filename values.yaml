# Default values for v2ray.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: v2fly/v2fly-core
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 80
  name: v2ray

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volumes:
  - configMap:
      defaultMode: 420
      items:
        - key: config.json
          path: config.json
      name: v2ray
    name: v2ray-conf

configmap: |-
  {
    "log": {
      "loglevel": "warning"
    },
    "inbounds": [
      {
        "port": 1080,
        "listen": "127.0.0.1",
        "tag": "socks-inbound",
        "protocol": "socks",
        "settings": {
          "auth": "noauth",
          "udp": false,
          "ip": "127.0.0.1"
        },
        "sniffing": {
          "enabled": true,
          "destOverride": [
              "http",
              "tls"
          ]
        }
      }
    ],
    "outbounds": [
      {
        "protocol": "freedom",
        "settings": {},
        "tag": "direct"
      },
      {
        "protocol": "blackhole",
        "settings": {},
        "tag": "blocked"
      }
    ],
    "routing": {
      "domainStrategy": "IPOnDemand",
      "rules": [
        {
          "type": "field",
          "ip": [
              "geoip:private"
          ],
          "outboundTag": "blocked"
        },
        {
          "type": "field",
          "domain": [
              "geosite:category-ads"
          ],
          "outboundTag": "blocked"
        }
      ]
    },
    "dns": {
      "hosts": {
        "domain:v2ray.com": "www.vicemc.net",
        "domain:github.io": "pages.github.com",
        "domain:wikipedia.org": "www.wikimedia.org",
        "domain:shadowsocks.org": "electronicsrealm.com"
      },
      "servers": [
        "1.1.1.1",
        {
          "address": "114.114.114.114",
          "port": 53,
          "domains": [
              "geosite:cn"
          ]
        },
        "8.8.8.8",
        "localhost"
      ]
    },
    "policy": {
      "levels": {
        "0": {
          "uplinkOnly": 0,
          "downlinkOnly": 0
        }
      },
      "system": {
        "statsInboundUplink": false,
        "statsInboundDownlink": false,
        "statsOutboundUplink": false,
        "statsOutboundDownlink": false
      }
    },
    "other": {}
  }